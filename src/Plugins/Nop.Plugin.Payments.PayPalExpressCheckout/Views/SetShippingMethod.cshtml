@model CheckoutShippingMethodModel
@{
    Layout = "~/Views/Shared/_ColumnsOne.cshtml";

    //title
    NopHtml.AddTitleParts(T("PageTitle.Checkout").Text);
}
<div class="page checkout-page">
    <div class="page-title">
        <h1>@T("Checkout.SelectShippingMethod")</h1>
    </div>
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutShippingMethodTop })
        <div class="section shipping-method">
            <form asp-controller="PaymentPayPalExpressCheckout" asp-action="SetShippingMethod" method="post">
                @if (Model.Warnings.Count == 0)
                {
                <ul class="method-list">
                    @for (var i = 0; i < Model.ShippingMethods.Count; i++)
                    {
                        var shippingMethod = Model.ShippingMethods[i];
                        <li>
                            <div class="method-name">
                                <input id="shippingoption_@(i)" type="radio" name="shippingoption" value="@(shippingMethod.Name)___@(shippingMethod.ShippingRateComputationMethodSystemName)" checked="@shippingMethod.Selected" />
                                <label for="shippingoption_@(i)">@shippingMethod.Name (@shippingMethod.Fee)</label>
                            </div>
                            @if (!string.IsNullOrEmpty(shippingMethod.Description))
                            {
                                <div class="method-description">
                                    @Html.Raw(shippingMethod.Description)
                                </div>
                            }
                        </li>
                    }
                </ul>
                <div class="buttons">
                    <input type="submit" name="nextstep" value="@T("Checkout.NextButton")" class="button-1 shipping-method-next-step-button" />
                </div>
                }
                else
                {
                <div class="message-error">
                    <ul>
                        @foreach (var warning in Model.Warnings)
                        {
                            <li>@warning</li>
                        }
                    </ul>
                </div>
                }
            </form>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutShippingMethodBottom })
        <div class="section order-summary">
            <div class="title">
                <strong>@T("Checkout.OrderSummary")</strong>
            </div>
            @await Component.InvokeAsync("OrderSummary")
        </div>
    </div>
</div>
